class SK {
    map<long long, long long> f;
    long long sm = 0, count = 0;
public:
    void add (long long x) {
        f[x]++;
        sm += x;
        count++;
    }
    void rm (long long x) {
        auto itr = f.find(x);
        --(itr->second);
        if (itr->second == 0)
            f.erase(itr);
        sm -= x;
        count--;
    }
    bool has (long long x) {
        return f.find(x) != f.end();
    }
    long long sum() {
        return sm;
    }
    long long min() {
        return f.begin()->first;
    }
    long long max() {
        return (--f.end())->first;
    }
    int size() {
        return count;
    }
};
