template<class T,const int b=31>
struct xbasis{
  vector<T>base;
  int n;
  xbasis(){
    base.resize(b);
    n=0;
  }
  xbasis(vector<T>&a){
    base.resize(b);
    n=0;
    for(auto &x:a)insert(x);
  }
  void insert(int x){
    for(int i=b-1;i>=0;i--){
      if(x>>i&1){
        if(!base[i]){
          base[i]=x;n++;
          return;
        }
        x^=base[i];
      }
    }
  }
  T val(int t=1){               //0-min 1-max
    int x=0;
    for(int i=b-1;i>=0;i--){
      if(base[i] and (((x>>i)&1)^t))x^=base[i];
    }return x;
  }
  int size(){return n;}
  bool find(int x){
    for(int i=b-1;i>=0;i--){
      if(x>>i&1){
        if(!base[i])return false;
        x^=base[i];
      }
    }return true;
  }
};
